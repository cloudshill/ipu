{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.2","compilation":{"directory":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50],"program":"/Users/kafuhamada/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--edition=2018","--crate-name","actix_rt","/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=875eebdd3001edc9","-C","extra-filename=-875eebdd3001edc9","--out-dir","/Users/kafuhamada/Documents/Study/Python/Flask/ipu/plugin_market/target/rls/debug/deps","-L","dependency=/Users/kafuhamada/Documents/Study/Python/Flask/ipu/plugin_market/target/rls/debug/deps","--extern","actix_threadpool=/Users/kafuhamada/Documents/Study/Python/Flask/ipu/plugin_market/target/rls/debug/deps/libactix_threadpool-e636a93ad2e38ab7.rmeta","--extern","futures=/Users/kafuhamada/Documents/Study/Python/Flask/ipu/plugin_market/target/rls/debug/deps/libfutures-36fc9c5f0b1dcdad.rmeta","--extern","tokio_current_thread=/Users/kafuhamada/Documents/Study/Python/Flask/ipu/plugin_market/target/rls/debug/deps/libtokio_current_thread-9e56d2c31244b119.rmeta","--extern","tokio_executor=/Users/kafuhamada/Documents/Study/Python/Flask/ipu/plugin_market/target/rls/debug/deps/libtokio_executor-3e81a3a5d2b3f1f3.rmeta","--extern","tokio_reactor=/Users/kafuhamada/Documents/Study/Python/Flask/ipu/plugin_market/target/rls/debug/deps/libtokio_reactor-58eeb5734848ba47.rmeta","--extern","tokio_timer=/Users/kafuhamada/Documents/Study/Python/Flask/ipu/plugin_market/target/rls/debug/deps/libtokio_timer-22ae0015ab13b360.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/kafuhamada/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,68,111,99,117,109,101,110,116,115,47,83,116,117,100,121,47,80,121,116,104,111,110,47,70,108,97,115,107,47,105,112,117,47,112,108,117,103,105,110,95,109,97,114,107,101,116,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,97,99,116,105,120,95,114,116,45,56,55,53,101,101,98,100,100,51,48,48,49,101,100,99,57,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"actix_rt","disambiguator":[18400630874813966357,6696469998832690035]},"crate_root":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src","external_crates":[{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[10276720879801066790,7270037695145965846]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[10081619512596250754,7636038010184307036]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[530680240650180892,17676251987033652714]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11705792804325932575,5133282415091935280]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17612447423192331107,152287996219017673]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4726535560424510965,12625991608955964180]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/lib.rs","num":7,"id":{"name":"rustc_demangle","disambiguator":[2075391902352510242,6907956565514940343]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[1151212087006369140,11441208638619140056]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/lib.rs","num":9,"id":{"name":"backtrace_sys","disambiguator":[8447635395464762154,8931705543987386293]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[8817718997728662164,16991859756432700022]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/arbiter.rs","num":11,"id":{"name":"futures","disambiguator":[13322985677926944286,8928495775863951525]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/arbiter.rs","num":12,"id":{"name":"tokio_current_thread","disambiguator":[2274107051783039597,14873656173131200993]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/runtime.rs","num":13,"id":{"name":"tokio_executor","disambiguator":[18254042591230911032,6040712086202627518]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/arbiter.rs","num":14,"id":{"name":"crossbeam_utils","disambiguator":[15748304330052537730,18224790611224242713]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/arbiter.rs","num":15,"id":{"name":"cfg_if","disambiguator":[15091429926129166764,11089803005832277337]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/arbiter.rs","num":16,"id":{"name":"lazy_static","disambiguator":[5505499625520047427,11820619831539565713]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/builder.rs","num":17,"id":{"name":"tokio_reactor","disambiguator":[13947921176600899379,18078716839133443343]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/builder.rs","num":18,"id":{"name":"log","disambiguator":[18305681335391193276,14168357186589133368]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/builder.rs","num":19,"id":{"name":"mio","disambiguator":[7580121570248855398,13189309331091221894]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/builder.rs","num":20,"id":{"name":"net2","disambiguator":[9865959648958299165,16428114977964153938]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/builder.rs","num":21,"id":{"name":"libc","disambiguator":[12754417319316353838,2533270702905957675]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/builder.rs","num":22,"id":{"name":"iovec","disambiguator":[11705498569841055178,9590894888181962113]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/builder.rs","num":23,"id":{"name":"slab","disambiguator":[5721178310442201014,4209991805855531206]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/builder.rs","num":24,"id":{"name":"num_cpus","disambiguator":[10147975330912585048,8251795159459048605]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/builder.rs","num":25,"id":{"name":"parking_lot","disambiguator":[17310900811647634229,7651920061612729857]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/builder.rs","num":26,"id":{"name":"lock_api","disambiguator":[3296784652292807389,8073817970701215318]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/builder.rs","num":27,"id":{"name":"scopeguard","disambiguator":[17053375009949538071,12550202249022676517]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/builder.rs","num":28,"id":{"name":"owning_ref","disambiguator":[11954348810979470642,15235087250656581104]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/builder.rs","num":29,"id":{"name":"stable_deref_trait","disambiguator":[17211370046318838544,1717915163905743563]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/builder.rs","num":30,"id":{"name":"parking_lot_core","disambiguator":[5654396422822933783,13094911405700975116]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/builder.rs","num":31,"id":{"name":"rand","disambiguator":[1434740282115904704,2508775071030240666]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/builder.rs","num":32,"id":{"name":"rand_jitter","disambiguator":[9860612140584831388,13119064577302067717]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/builder.rs","num":33,"id":{"name":"rand_core","disambiguator":[15626934703570268357,14241757386494578888]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/builder.rs","num":34,"id":{"name":"rand_os","disambiguator":[10913673727785453687,10090549521103763213]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/builder.rs","num":35,"id":{"name":"rand_isaac","disambiguator":[18048955687387928730,13012747799088707141]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/builder.rs","num":36,"id":{"name":"rand_core","disambiguator":[17257018165449867085,12270982780340280045]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/builder.rs","num":37,"id":{"name":"rand_chacha","disambiguator":[15709293451861226336,2135492918709176966]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/builder.rs","num":38,"id":{"name":"rand_hc","disambiguator":[4590232432165700695,11003766660164033261]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/builder.rs","num":39,"id":{"name":"rand_pcg","disambiguator":[4972483740743828883,14211286883336701826]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/builder.rs","num":40,"id":{"name":"rand_xorshift","disambiguator":[7640422103726982096,5382879627999367513]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/builder.rs","num":41,"id":{"name":"smallvec","disambiguator":[6400286196498626601,2490639602576790802]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/builder.rs","num":42,"id":{"name":"tokio_io","disambiguator":[16190350714674022115,4216525605291402135]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/builder.rs","num":43,"id":{"name":"bytes","disambiguator":[6628222331448514398,10266417969816130403]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/builder.rs","num":44,"id":{"name":"byteorder","disambiguator":[6601194364471206112,11011716180478676980]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/builder.rs","num":45,"id":{"name":"tokio_sync","disambiguator":[9707031294480844263,11425782588297757488]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/builder.rs","num":46,"id":{"name":"fnv","disambiguator":[18193406559090740127,15438009076609318869]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/builder.rs","num":47,"id":{"name":"tokio_timer","disambiguator":[416053592072568388,12190408130566457778]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/lib.rs","num":48,"id":{"name":"actix_threadpool","disambiguator":[7053265222070854980,3439813715891077449]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/lib.rs","num":49,"id":{"name":"derive_more","disambiguator":[3566604922918452323,6569509192539497972]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/lib.rs","num":50,"id":{"name":"threadpool","disambiguator":[4268575831778652697,18038471467188020032]}}],"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":631,"line_start":1,"line_end":30,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":360},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":149,"byte_end":156,"line_start":8,"line_end":8,"column_start":24,"column_end":31},"alias_span":null,"name":"Arbiter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":172},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":182,"byte_end":189,"line_start":9,"line_end":9,"column_start":25,"column_end":32},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":382},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":191,"byte_end":203,"line_start":9,"line_end":9,"column_start":34,"column_end":46},"alias_span":null,"name":"SystemRunner","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":388},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":229,"byte_end":236,"line_start":10,"line_end":10,"column_start":24,"column_end":31},"alias_span":null,"name":"Runtime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":400},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":260,"byte_end":266,"line_start":11,"line_end":11,"column_start":23,"column_end":29},"alias_span":null,"name":"System","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":48,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":292,"byte_end":308,"line_start":14,"line_end":14,"column_start":9,"column_end":25},"alias_span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":312,"byte_end":320,"line_start":14,"line_end":14,"column_start":29,"column_end":37},"name":"blocking","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":631,"line_start":1,"line_end":30,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-0.2.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":134},{"krate":0,"index":198},{"krate":0,"index":262},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":328},{"krate":0,"index":330},{"krate":0,"index":332},{"krate":0,"index":334}],"decl_id":null,"docs":" A runtime implementation that runs everything on the current thread.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":360},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,97,114,98,105,116,101,114,46,114,115],"byte_start":2113,"byte_end":2120,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"Arbiter","qualname":"::arbiter::Arbiter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Arbiters provide an asynchronous execution environment for actors, functions\n and futures. When an Arbiter is created, they spawn a new OS thread, and\n host an event loop. Some Arbiter functions execute on the current thread.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,97,114,98,105,116,101,114,46,114,115],"byte_start":2689,"byte_end":2696,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"current","qualname":"<Arbiter>::current","value":"fn () -> Arbiter","parent":null,"children":[],"decl_id":null,"docs":" Returns the current thread's arbiter's address. If no Arbiter is present, then this\n function will panic!\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,97,114,98,105,116,101,114,46,114,115],"byte_start":2941,"byte_end":2945,"line_start":72,"line_end":72,"column_start":12,"column_end":16},"name":"stop","qualname":"<Arbiter>::stop","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stop arbiter from continuing it's event loop.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,97,114,98,105,116,101,114,46,114,115],"byte_start":3147,"byte_end":3150,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"new","qualname":"<Arbiter>::new","value":"fn () -> Arbiter","parent":null,"children":[],"decl_id":null,"docs":" Spawn new thread and run event loop in spawned thread.\n Returns address of newly created arbiter.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,97,114,98,105,116,101,114,46,114,115],"byte_start":5022,"byte_end":5027,"line_start":138,"line_end":138,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Arbiter>::spawn","value":"fn <F> (future: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future on the current thread. This does not create a new Arbiter\n or Arbiter address, it is simply a helper for spawning futures on the current\n thread.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,97,114,98,105,116,101,114,46,114,115],"byte_start":5544,"byte_end":5552,"line_start":154,"line_end":154,"column_start":12,"column_end":20},"name":"spawn_fn","qualname":"<Arbiter>::spawn_fn","value":"fn <F, R> (f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Executes a future on the current thread. This does not create a new Arbiter\n or Arbiter address, it is simply a helper for executing futures on the current\n thread.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,97,114,98,105,116,101,114,46,114,115],"byte_start":5792,"byte_end":5796,"line_start":163,"line_end":163,"column_start":12,"column_end":16},"name":"send","qualname":"<Arbiter>::send","value":"fn <F> (&self, future: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Send a future to the Arbiter's thread, and spawn it.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,97,114,98,105,116,101,114,46,114,115],"byte_start":6135,"byte_end":6142,"line_start":174,"line_end":174,"column_start":12,"column_end":19},"name":"exec_fn","qualname":"<Arbiter>::exec_fn","value":"fn <F> (&self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Send a function to the Arbiter's thread, and execute it. Any result from the function\n is discarded.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,97,114,98,105,116,101,114,46,114,115],"byte_start":6607,"byte_end":6611,"line_start":188,"line_end":188,"column_start":12,"column_end":16},"name":"exec","qualname":"<Arbiter>::exec","value":"fn <F, R> (&self, f: F) -> impl Future<Item = R, Error = Canceled>","parent":null,"children":[],"decl_id":null,"docs":" Send a function to the Arbiter's thread. This function will be executed asynchronously.\n A future is created, and when resolved will contain the result of the function sent\n to the Arbiters thread.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":172},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,98,117,105,108,100,101,114,46,114,115],"byte_start":10970,"byte_end":10977,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"name":"Builder","qualname":"::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":81}],"decl_id":null,"docs":" Builder struct for a actix runtime.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,98,117,105,108,100,101,114,46,114,115],"byte_start":11474,"byte_end":11478,"line_start":43,"line_end":43,"column_start":12,"column_end":16},"name":"name","qualname":"<Builder>::name","value":"fn <T> (mut self, name: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the name of the System.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,98,117,105,108,100,101,114,46,114,115],"byte_start":11712,"byte_end":11717,"line_start":51,"line_end":51,"column_start":12,"column_end":17},"name":"clock","qualname":"<Builder>::clock","value":"fn (mut self, clock: Clock) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the Clock instance that will be used by this System.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,98,117,105,108,100,101,114,46,114,115],"byte_start":11994,"byte_end":12007,"line_start":60,"line_end":60,"column_start":12,"column_end":25},"name":"stop_on_panic","qualname":"<Builder>::stop_on_panic","value":"fn (mut self, stop_on_panic: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the option 'stop_on_panic' which controls whether the System is stopped when an\n uncaught panic is thrown from a worker thread.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,98,117,105,108,100,101,114,46,114,115],"byte_start":12221,"byte_end":12226,"line_start":68,"line_end":68,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"fn (self) -> SystemRunner","parent":null,"children":[],"decl_id":null,"docs":" Create new System.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,98,117,105,108,100,101,114,46,114,115],"byte_start":12483,"byte_end":12486,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"run","qualname":"<Builder>::run","value":"fn <F> (self, f: F) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" This function will start tokio runtime and will finish once the\n `System::stop()` message get called.\n Function `f` get called within tokio runtime context.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":382},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,98,117,105,108,100,101,114,46,114,115],"byte_start":14345,"byte_end":14357,"line_start":133,"line_end":133,"column_start":12,"column_end":24},"name":"SystemRunner","qualname":"::builder::SystemRunner","value":"SystemRunner {  }","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":173},{"krate":0,"index":175}],"decl_id":null,"docs":" Helper object that runs System's event loop\n","sig":null,"attributes":[{"value":"must_use = \"SystemRunner must be run\"","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,98,117,105,108,100,101,114,46,114,115],"byte_start":14276,"byte_end":14316,"line_start":131,"line_end":131,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,98,117,105,108,100,101,114,46,114,115],"byte_start":14570,"byte_end":14573,"line_start":142,"line_end":142,"column_start":12,"column_end":15},"name":"run","qualname":"<SystemRunner>::run","value":"fn (self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" This function will start event loop and will finish once the\n `System::stop()` function is called.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,98,117,105,108,100,101,114,46,114,115],"byte_start":15346,"byte_end":15354,"line_start":168,"line_end":168,"column_start":12,"column_end":20},"name":"block_on","qualname":"<SystemRunner>::block_on","value":"fn <F, I, E> (&mut self, fut: F) -> Result<I, E>","parent":null,"children":[],"decl_id":null,"docs":" Execute a future and wait for result.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":388},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,114,117,110,116,105,109,101,46,114,115],"byte_start":16281,"byte_end":16288,"line_start":20,"line_end":20,"column_start":12,"column_end":19},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":183}],"decl_id":null,"docs":" Single-threaded runtime provides a way to start reactor\n and executor on the current thread.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":394},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,114,117,110,116,105,109,101,46,114,115],"byte_start":16503,"byte_end":16511,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"RunError","qualname":"::runtime::RunError","value":"RunError {  }","parent":null,"children":[{"krate":0,"index":185}],"decl_id":null,"docs":" Error returned by the `run` function.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,114,117,110,116,105,109,101,46,114,115],"byte_start":17014,"byte_end":17017,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"new","qualname":"<Runtime>::new","value":"fn () -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new runtime initialized with default configuration values.\n","sig":null,"attributes":[{"value":"allow(clippy::new_ret_no_self)","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,114,117,110,116,105,109,101,46,114,115],"byte_start":16892,"byte_end":16925,"line_start":49,"line_end":49,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,114,117,110,116,105,109,101,46,114,115],"byte_start":18230,"byte_end":18235,"line_start":98,"line_end":98,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Runtime>::spawn","value":"fn <F> (&mut self, future: F) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the single-threaded Tokio runtime.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,114,117,110,116,105,109,101,46,114,115],"byte_start":19276,"byte_end":19284,"line_start":122,"line_end":122,"column_start":12,"column_end":20},"name":"block_on","qualname":"<Runtime>::block_on","value":"fn <F> (&mut self, f: F) -> Result<F::Item, F::Error>","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided future, blocking the current thread until the future\n completes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,114,117,110,116,105,109,101,46,114,115],"byte_start":19708,"byte_end":19711,"line_start":135,"line_end":135,"column_start":12,"column_end":15},"name":"run","qualname":"<Runtime>::run","value":"fn (&mut self) -> Result<(), RunError>","parent":null,"children":[],"decl_id":null,"docs":" Run the executor to completion, blocking the thread until **all**\n spawned futures have completed.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":400},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":21702,"byte_end":21708,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"System","qualname":"::system::System","value":"System {  }","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193}],"decl_id":null,"docs":" System is a runtime manager.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":22529,"byte_end":22536,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"builder","qualname":"<System>::builder","value":"fn () -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Build a new system with a customized tokio runtime.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":22728,"byte_end":22731,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"new","qualname":"<System>::new","value":"fn <T> (name: T) -> SystemRunner","parent":null,"children":[],"decl_id":null,"docs":" Create new system.","sig":null,"attributes":[{"value":"allow(clippy::new_ret_no_self)","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":22586,"byte_end":22619,"line_start":50,"line_end":50,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":22873,"byte_end":22880,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"current","qualname":"<System>::current","value":"fn () -> System","parent":null,"children":[],"decl_id":null,"docs":" Get current running system.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":23258,"byte_end":23269,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"set_current","qualname":"<System>::set_current","value":"fn (sys: System) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set current running system.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":23430,"byte_end":23442,"line_start":80,"line_end":80,"column_start":12,"column_end":24},"name":"with_current","qualname":"<System>::with_current","value":"fn <F, R> (f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Execute function with system reference.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":23697,"byte_end":23699,"line_start":91,"line_end":91,"column_start":12,"column_end":14},"name":"id","qualname":"<System>::id","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" System id\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":23776,"byte_end":23780,"line_start":96,"line_end":96,"column_start":12,"column_end":16},"name":"stop","qualname":"<System>::stop","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stop the system\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":23892,"byte_end":23906,"line_start":101,"line_end":101,"column_start":12,"column_end":26},"name":"stop_with_code","qualname":"<System>::stop_with_code","value":"fn (&self, code: i32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stop the system with a particular exit code.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":24260,"byte_end":24273,"line_start":111,"line_end":111,"column_start":12,"column_end":25},"name":"stop_on_panic","qualname":"<System>::stop_on_panic","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return status of 'stop_on_panic' option which controls whether the System is stopped when an\n uncaught panic is thrown from a worker thread.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":24359,"byte_end":24366,"line_start":116,"line_end":116,"column_start":12,"column_end":19},"name":"arbiter","qualname":"<System>::arbiter","value":"fn (&self) -> &Arbiter","parent":null,"children":[],"decl_id":null,"docs":" System arbiter\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":24607,"byte_end":24610,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"run","qualname":"<System>::run","value":"fn <F> (f: F) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" This function will start tokio runtime and will finish once the\n `System::stop()` message get called.\n Function `f` get called within tokio runtime context.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":334},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":452,"byte_end":457,"line_start":21,"line_end":21,"column_start":8,"column_end":13},"name":"spawn","qualname":"::spawn","value":"fn <F> (f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Spawns a future on the current arbiter.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,97,114,98,105,116,101,114,46,114,115],"byte_start":1491,"byte_end":1505,"line_start":28,"line_end":28,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,97,114,98,105,116,101,114,46,114,115],"byte_start":2173,"byte_end":2180,"line_start":44,"line_end":44,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,97,114,98,105,116,101,114,46,114,115],"byte_start":2244,"byte_end":2251,"line_start":50,"line_end":50,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,97,114,98,105,116,101,114,46,114,115],"byte_start":7158,"byte_end":7175,"line_start":210,"line_end":210,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,97,114,98,105,116,101,114,46,114,115],"byte_start":7461,"byte_end":7478,"line_start":221,"line_end":221,"column_start":17,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,97,114,98,105,116,101,114,46,114,115],"byte_start":8689,"byte_end":8702,"line_start":263,"line_end":263,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,97,114,98,105,116,101,114,46,114,115],"byte_start":8949,"byte_end":8962,"line_start":273,"line_end":273,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,97,114,98,105,116,101,114,46,114,115],"byte_start":10180,"byte_end":10181,"line_start":309,"line_end":309,"column_start":20,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,98,117,105,108,100,101,114,46,114,115],"byte_start":11238,"byte_end":11245,"line_start":33,"line_end":33,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,98,117,105,108,100,101,114,46,114,115],"byte_start":14430,"byte_end":14442,"line_start":139,"line_end":139,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,114,117,110,116,105,109,101,46,114,115],"byte_start":16576,"byte_end":16584,"line_start":33,"line_end":33,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,114,117,110,116,105,109,101,46,114,115],"byte_start":16710,"byte_end":16718,"line_start":39,"line_end":39,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,114,117,110,116,105,109,101,46,114,115],"byte_start":16878,"byte_end":16885,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":21907,"byte_end":21913,"line_start":25,"line_end":25,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":314},{"krate":0,"index":316},{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,97,114,98,105,116,101,114,46,114,115],"byte_start":1491,"byte_end":1505,"line_start":28,"line_end":28,"column_start":21,"column_end":35},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":66},"to":{"krate":2,"index":8426}},{"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,97,114,98,105,116,101,114,46,114,115],"byte_start":2173,"byte_end":2180,"line_start":44,"line_end":44,"column_start":18,"column_end":25},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":360},"to":{"krate":2,"index":2632}},{"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,97,114,98,105,116,101,114,46,114,115],"byte_start":2244,"byte_end":2251,"line_start":50,"line_end":50,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,97,114,98,105,116,101,114,46,114,115],"byte_start":7158,"byte_end":7175,"line_start":210,"line_end":210,"column_start":15,"column_end":32},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":100},"to":{"krate":2,"index":1978}},{"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,97,114,98,105,116,101,114,46,114,115],"byte_start":7461,"byte_end":7478,"line_start":221,"line_end":221,"column_start":17,"column_end":34},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":100},"to":{"krate":11,"index":668}},{"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,97,114,98,105,116,101,114,46,114,115],"byte_start":8689,"byte_end":8702,"line_start":263,"line_end":263,"column_start":6,"column_end":19},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,97,114,98,105,116,101,114,46,114,115],"byte_start":8949,"byte_end":8962,"line_start":273,"line_end":273,"column_start":17,"column_end":30},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":376},"to":{"krate":11,"index":668}},{"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,97,114,98,105,116,101,114,46,114,115],"byte_start":10107,"byte_end":10111,"line_start":305,"line_end":305,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":1700},"to":{"krate":0,"index":126}},{"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,97,114,98,105,116,101,114,46,114,115],"byte_start":10180,"byte_end":10181,"line_start":309,"line_end":309,"column_start":20,"column_end":21},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":75},"to":{"krate":0,"index":126}},{"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,98,117,105,108,100,101,114,46,114,115],"byte_start":11238,"byte_end":11245,"line_start":33,"line_end":33,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,98,117,105,108,100,101,114,46,114,115],"byte_start":14430,"byte_end":14442,"line_start":139,"line_end":139,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,114,117,110,116,105,109,101,46,114,115],"byte_start":16576,"byte_end":16584,"line_start":33,"line_end":33,"column_start":23,"column_end":31},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":394},"to":{"krate":2,"index":8430}},{"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,114,117,110,116,105,109,101,46,114,115],"byte_start":16710,"byte_end":16718,"line_start":39,"line_end":39,"column_start":16,"column_end":24},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":394},"to":{"krate":1,"index":2470}},{"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,114,117,110,116,105,109,101,46,114,115],"byte_start":16878,"byte_end":16885,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":388},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,99,116,105,120,45,114,116,45,48,46,50,46,50,47,115,114,99,47,115,121,115,116,101,109,46,114,115],"byte_start":21907,"byte_end":21913,"line_start":25,"line_end":25,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":400},"to":{"krate":4294967295,"index":4294967295}}]}
{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.2","compilation":{"directory":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51],"program":"/Users/kafuhamada/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","tokio_tcp","/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=9ba18c272a750f4b","-C","extra-filename=-9ba18c272a750f4b","--out-dir","/Users/kafuhamada/Documents/Study/Python/Flask/ipu/plugin_market/target/rls/debug/deps","-L","dependency=/Users/kafuhamada/Documents/Study/Python/Flask/ipu/plugin_market/target/rls/debug/deps","--extern","bytes=/Users/kafuhamada/Documents/Study/Python/Flask/ipu/plugin_market/target/rls/debug/deps/libbytes-f489fa4f0d2cd306.rmeta","--extern","futures=/Users/kafuhamada/Documents/Study/Python/Flask/ipu/plugin_market/target/rls/debug/deps/libfutures-36fc9c5f0b1dcdad.rmeta","--extern","iovec=/Users/kafuhamada/Documents/Study/Python/Flask/ipu/plugin_market/target/rls/debug/deps/libiovec-8892b095316a4b69.rmeta","--extern","mio=/Users/kafuhamada/Documents/Study/Python/Flask/ipu/plugin_market/target/rls/debug/deps/libmio-a389a7562df294cd.rmeta","--extern","tokio_io=/Users/kafuhamada/Documents/Study/Python/Flask/ipu/plugin_market/target/rls/debug/deps/libtokio_io-353ddf2b90cf4168.rmeta","--extern","tokio_reactor=/Users/kafuhamada/Documents/Study/Python/Flask/ipu/plugin_market/target/rls/debug/deps/libtokio_reactor-58eeb5734848ba47.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/kafuhamada/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,68,111,99,117,109,101,110,116,115,47,83,116,117,100,121,47,80,121,116,104,111,110,47,70,108,97,115,107,47,105,112,117,47,112,108,117,103,105,110,95,109,97,114,107,101,116,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,116,111,107,105,111,95,116,99,112,45,57,98,97,49,56,99,50,55,50,97,55,53,48,102,52,98,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"tokio_tcp","disambiguator":[13385986185200178281,8558609009158058908]},"crate_root":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src","external_crates":[{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[10276720879801066790,7270037695145965846]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[10081619512596250754,7636038010184307036]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[530680240650180892,17676251987033652714]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11705792804325932575,5133282415091935280]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17612447423192331107,152287996219017673]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4726535560424510965,12625991608955964180]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":7,"id":{"name":"rustc_demangle","disambiguator":[2075391902352510242,6907956565514940343]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[1151212087006369140,11441208638619140056]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":9,"id":{"name":"backtrace_sys","disambiguator":[8447635395464762154,8931705543987386293]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[8817718997728662164,16991859756432700022]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":11,"id":{"name":"bytes","disambiguator":[6628222331448514398,10266417969816130403]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":12,"id":{"name":"byteorder","disambiguator":[6601194364471206112,11011716180478676980]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":13,"id":{"name":"iovec","disambiguator":[11705498569841055178,9590894888181962113]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":14,"id":{"name":"libc","disambiguator":[12754417319316353838,2533270702905957675]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":15,"id":{"name":"futures","disambiguator":[13322985677926944286,8928495775863951525]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":16,"id":{"name":"mio","disambiguator":[7580121570248855398,13189309331091221894]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":17,"id":{"name":"net2","disambiguator":[9865959648958299165,16428114977964153938]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":18,"id":{"name":"cfg_if","disambiguator":[15091429926129166764,11089803005832277337]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":19,"id":{"name":"slab","disambiguator":[5721178310442201014,4209991805855531206]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":20,"id":{"name":"log","disambiguator":[18305681335391193276,14168357186589133368]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":21,"id":{"name":"tokio_io","disambiguator":[16190350714674022115,4216525605291402135]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":22,"id":{"name":"tokio_reactor","disambiguator":[13947921176600899379,18078716839133443343]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":23,"id":{"name":"crossbeam_utils","disambiguator":[15748304330052537730,18224790611224242713]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":24,"id":{"name":"lazy_static","disambiguator":[5505499625520047427,11820619831539565713]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":25,"id":{"name":"num_cpus","disambiguator":[10147975330912585048,8251795159459048605]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":26,"id":{"name":"parking_lot","disambiguator":[17310900811647634229,7651920061612729857]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":27,"id":{"name":"lock_api","disambiguator":[3296784652292807389,8073817970701215318]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":28,"id":{"name":"scopeguard","disambiguator":[17053375009949538071,12550202249022676517]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":29,"id":{"name":"owning_ref","disambiguator":[11954348810979470642,15235087250656581104]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":30,"id":{"name":"stable_deref_trait","disambiguator":[17211370046318838544,1717915163905743563]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":31,"id":{"name":"parking_lot_core","disambiguator":[5654396422822933783,13094911405700975116]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":32,"id":{"name":"rand","disambiguator":[1434740282115904704,2508775071030240666]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":33,"id":{"name":"rand_jitter","disambiguator":[9860612140584831388,13119064577302067717]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":34,"id":{"name":"rand_core","disambiguator":[15626934703570268357,14241757386494578888]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":35,"id":{"name":"rand_os","disambiguator":[10913673727785453687,10090549521103763213]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":36,"id":{"name":"rand_isaac","disambiguator":[18048955687387928730,13012747799088707141]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":37,"id":{"name":"rand_core","disambiguator":[17257018165449867085,12270982780340280045]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":38,"id":{"name":"rand_chacha","disambiguator":[15709293451861226336,2135492918709176966]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":39,"id":{"name":"rand_hc","disambiguator":[4590232432165700695,11003766660164033261]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":40,"id":{"name":"rand_pcg","disambiguator":[4972483740743828883,14211286883336701826]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":41,"id":{"name":"rand_xorshift","disambiguator":[7640422103726982096,5382879627999367513]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":42,"id":{"name":"smallvec","disambiguator":[6400286196498626601,2490639602576790802]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":43,"id":{"name":"tokio_executor","disambiguator":[18254042591230911032,6040712086202627518]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":44,"id":{"name":"tokio_sync","disambiguator":[9707031294480844263,11425782588297757488]}},{"file_name":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","num":45,"id":{"name":"fnv","disambiguator":[18193406559090740127,15438009076609318869]}}],"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":1378,"line_start":1,"line_end":40,"column_start":1,"column_end":37}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":314},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1262,"byte_end":1270,"line_start":37,"line_end":37,"column_start":25,"column_end":33},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":76},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1296,"byte_end":1307,"line_start":38,"line_end":38,"column_start":25,"column_end":36},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":170},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1331,"byte_end":1340,"line_start":39,"line_end":39,"column_start":23,"column_end":32},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":320},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1364,"byte_end":1377,"line_start":40,"line_end":40,"column_start":23,"column_end":36},"alias_span":null,"name":"ConnectFuture","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":1378,"line_start":1,"line_end":40,"column_start":1,"column_end":37},"name":"","qualname":"::","value":"/Users/kafuhamada/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-tcp-0.1.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":46},{"krate":0,"index":116},{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":312}],"decl_id":null,"docs":" TCP bindings for `tokio`.","sig":null,"attributes":[{"value":"deny(missing_docs, warnings, missing_debug_implementations)","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":59,"byte_end":122,"line_start":2,"line_end":2,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":314},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,105,110,99,111,109,105,110,103,46,114,115],"byte_start":1700,"byte_end":1708,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::incoming::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":49}],"decl_id":null,"docs":" Stream returned by the `TcpListener::incoming` function representing the\n stream of sockets received from a listener.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,105,110,99,111,109,105,110,103,46,114,115],"byte_start":1623,"byte_end":1671,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":76},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":3264,"byte_end":3275,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"TcpListener","qualname":"::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":19}],"decl_id":null,"docs":" An I/O object representing a TCP socket listening for incoming connections.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":3944,"byte_end":3948,"line_start":69,"line_end":69,"column_start":12,"column_end":16},"name":"bind","qualname":"<TcpListener>::bind","value":"fn (addr: &SocketAddr) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Create a new TCP listener associated with this event loop.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":4187,"byte_end":4193,"line_start":76,"line_end":76,"column_start":12,"column_end":18},"name":"accept","qualname":"<TcpListener>::accept","value":"fn (&mut self) -> io::Result<(TcpStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.1.2\", note = \"use poll_accept instead\")","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":4092,"byte_end":4156,"line_start":74,"line_end":74,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":5838,"byte_end":5849,"line_start":122,"line_end":122,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<TcpListener>::poll_accept","value":"fn (&mut self) -> Poll<(TcpStream, SocketAddr), io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to accept a connection and create a new connected `TcpStream` if\n successful.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":6203,"byte_end":6213,"line_start":133,"line_end":133,"column_start":12,"column_end":22},"name":"accept_std","qualname":"<TcpListener>::accept_std","value":"fn (&mut self) -> io::Result<(net::TcpStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.1.2\", note = \"use poll_accept_std instead\")","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":6104,"byte_end":6172,"line_start":131,"line_end":131,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":8006,"byte_end":8021,"line_start":180,"line_end":180,"column_start":12,"column_end":27},"name":"poll_accept_std","qualname":"<TcpListener>::poll_accept_std","value":"fn (&mut self) -> Poll<(net::TcpStream, SocketAddr), io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to accept a connection and create a new connected `TcpStream` if\n successful.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":10522,"byte_end":10530,"line_start":238,"line_end":238,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"fn (listener: net::TcpListener, handle: &Handle) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Create a new TCP listener from the standard library's TCP listener.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":11644,"byte_end":11654,"line_start":271,"line_end":271,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":13194,"byte_end":13202,"line_start":313,"line_end":313,"column_start":12,"column_end":20},"name":"incoming","qualname":"<TcpListener>::incoming","value":"fn (self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Consumes this listener, returning a stream of the sockets this listener\n accepts.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":13918,"byte_end":13921,"line_start":338,"line_end":338,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":14604,"byte_end":14611,"line_start":361,"line_end":361,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":170},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":16637,"byte_end":16646,"line_start":43,"line_end":43,"column_start":12,"column_end":21},"name":"TcpStream","qualname":"::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":21}],"decl_id":null,"docs":" An I/O object representing a TCP stream connected to a remote endpoint.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":320},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":16885,"byte_end":16898,"line_start":51,"line_end":51,"column_start":12,"column_end":25},"name":"ConnectFuture","qualname":"::stream::ConnectFuture","value":"ConnectFuture {  }","parent":null,"children":[{"krate":0,"index":51}],"decl_id":null,"docs":" Future returned by `TcpStream::connect` which will resolve to a `TcpStream`\n when the stream is connected.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":16808,"byte_end":16856,"line_start":49,"line_end":49,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":17979,"byte_end":17986,"line_start":88,"line_end":88,"column_start":12,"column_end":19},"name":"connect","qualname":"<TcpStream>::connect","value":"fn (addr: &SocketAddr) -> ConnectFuture","parent":null,"children":[],"decl_id":null,"docs":" Create a new TCP stream connected to the specified address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":19231,"byte_end":19239,"line_start":125,"line_end":125,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"fn (stream: net::TcpStream, handle: &Handle) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `TcpStream` from a `net::TcpStream`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":20532,"byte_end":20543,"line_start":152,"line_end":152,"column_start":12,"column_end":23},"name":"connect_std","qualname":"<TcpStream>::connect_std","value":"fn (stream: net::TcpStream, addr: &SocketAddr, handle: &Handle) -> ConnectFuture","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpStream` from the pending socket inside the given\n `std::net::TcpStream`, connecting it to the address specified.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":22592,"byte_end":22607,"line_start":215,"line_end":215,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<TcpStream>::poll_read_ready","value":"fn (&self, mask: mio::Ready) -> Poll<mio::Ready, io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Check the TCP stream's read readiness state.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":24036,"byte_end":24052,"line_start":257,"line_end":257,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<TcpStream>::poll_write_ready","value":"fn (&self) -> Poll<mio::Ready, io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Check the TCP stream's write readiness state.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":24842,"byte_end":24852,"line_start":282,"line_end":282,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is bound to.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":25637,"byte_end":25646,"line_start":306,"line_end":306,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.\n # Examples","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":25824,"byte_end":25828,"line_start":312,"line_end":312,"column_start":12,"column_end":16},"name":"peek","qualname":"<TcpStream>::peek","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.1.2\", note = \"use poll_peek instead\")","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":25731,"byte_end":25793,"line_start":310,"line_end":310,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":27610,"byte_end":27619,"line_start":362,"line_end":362,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<TcpStream>::poll_peek","value":"fn (&mut self, buf: &mut [u8]) -> Poll<usize, io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":28862,"byte_end":28870,"line_start":399,"line_end":399,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"fn (&self, how: Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":29772,"byte_end":29779,"line_start":428,"line_end":428,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":30809,"byte_end":30820,"line_start":458,"line_end":458,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"fn (&self, nodelay: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":31771,"byte_end":31787,"line_start":487,"line_end":487,"column_start":12,"column_end":28},"name":"recv_buffer_size","qualname":"<TcpStream>::recv_buffer_size","value":"fn (&self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":32606,"byte_end":32626,"line_start":514,"line_end":514,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<TcpStream>::set_recv_buffer_size","value":"fn (&self, size: usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":33566,"byte_end":33582,"line_start":543,"line_end":543,"column_start":12,"column_end":28},"name":"send_buffer_size","qualname":"<TcpStream>::send_buffer_size","value":"fn (&self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":34398,"byte_end":34418,"line_start":570,"line_end":570,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<TcpStream>::set_send_buffer_size","value":"fn (&self, size: usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":35388,"byte_end":35397,"line_start":600,"line_end":600,"column_start":12,"column_end":21},"name":"keepalive","qualname":"<TcpStream>::keepalive","value":"fn (&self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Returns whether keepalive messages are enabled on this socket, and if so\n the duration of time between them.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":36648,"byte_end":36661,"line_start":635,"line_end":635,"column_start":12,"column_end":25},"name":"set_keepalive","qualname":"<TcpStream>::set_keepalive","value":"fn (&self, keepalive: Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether keepalive messages are enabled to be sent on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":37550,"byte_end":37553,"line_start":664,"line_end":664,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":38334,"byte_end":38341,"line_start":691,"line_end":691,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":39245,"byte_end":39251,"line_start":721,"line_end":721,"column_start":12,"column_end":18},"name":"linger","qualname":"<TcpStream>::linger","value":"fn (&self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the linger duration for this socket by getting the `SO_LINGER`\n option.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":40411,"byte_end":40421,"line_start":755,"line_end":755,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<TcpStream>::set_linger","value":"fn (&self, dur: Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the linger duration of this socket by setting the `SO_LINGER`\n option.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":41469,"byte_end":41478,"line_start":786,"line_end":786,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<TcpStream>::try_clone","value":"fn (&self) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new independently owned handle to the underlying socket.","sig":null,"attributes":[{"value":"deprecated(since = \"0.1.14\", note = \"use `split()` instead\")","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":41375,"byte_end":41438,"line_start":784,"line_end":784,"column_start":5,"column_end":68}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,105,110,99,111,109,105,110,103,46,114,115],"byte_start":1743,"byte_end":1751,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,105,110,99,111,109,105,110,103,46,114,115],"byte_start":1875,"byte_end":1883,"line_start":22,"line_end":22,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":3330,"byte_end":3341,"line_start":50,"line_end":50,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":14717,"byte_end":14728,"line_start":366,"line_end":366,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":14940,"byte_end":14951,"line_start":377,"line_end":377,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":17092,"byte_end":17101,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":41892,"byte_end":41901,"line_start":797,"line_end":797,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":42016,"byte_end":42025,"line_start":803,"line_end":803,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":42207,"byte_end":42216,"line_start":812,"line_end":812,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":42471,"byte_end":42480,"line_start":822,"line_end":822,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":46262,"byte_end":46271,"line_start":938,"line_end":938,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":46391,"byte_end":46404,"line_start":944,"line_end":944,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":46558,"byte_end":46576,"line_start":953,"line_end":953,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":48066,"byte_end":48084,"line_start":992,"line_end":992,"column_start":17,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":48365,"byte_end":48374,"line_start":1006,"line_end":1006,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,105,110,99,111,109,105,110,103,46,114,115],"byte_start":1743,"byte_end":1751,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,105,110,99,111,109,105,110,103,46,114,115],"byte_start":1875,"byte_end":1883,"line_start":22,"line_end":22,"column_start":17,"column_end":25},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":314},"to":{"krate":15,"index":2046}},{"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":3330,"byte_end":3341,"line_start":50,"line_end":50,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":76},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":14717,"byte_end":14728,"line_start":366,"line_end":366,"column_start":21,"column_end":32},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":76},"to":{"krate":2,"index":8426}},{"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,108,105,115,116,101,110,101,114,46,114,115],"byte_start":14940,"byte_end":14951,"line_start":377,"line_end":377,"column_start":22,"column_end":33},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":76},"to":{"krate":1,"index":11960}},{"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":17092,"byte_end":17101,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":41892,"byte_end":41901,"line_start":797,"line_end":797,"column_start":15,"column_end":24},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":170},"to":{"krate":1,"index":4432}},{"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":42016,"byte_end":42025,"line_start":803,"line_end":803,"column_start":16,"column_end":25},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":170},"to":{"krate":1,"index":4500}},{"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":42207,"byte_end":42216,"line_start":812,"line_end":812,"column_start":20,"column_end":29},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":170},"to":{"krate":21,"index":922}},{"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":42471,"byte_end":42480,"line_start":822,"line_end":822,"column_start":21,"column_end":30},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":170},"to":{"krate":21,"index":960}},{"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":46262,"byte_end":46271,"line_start":938,"line_end":938,"column_start":21,"column_end":30},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":170},"to":{"krate":2,"index":8426}},{"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":46391,"byte_end":46404,"line_start":944,"line_end":944,"column_start":17,"column_end":30},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":320},"to":{"krate":15,"index":668}},{"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":46558,"byte_end":46576,"line_start":953,"line_end":953,"column_start":6,"column_end":24},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":48066,"byte_end":48084,"line_start":992,"line_end":992,"column_start":17,"column_end":35},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":326},"to":{"krate":15,"index":668}},{"span":{"file_name":[47,85,115,101,114,115,47,107,97,102,117,104,97,109,97,100,97,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,111,107,105,111,45,116,99,112,45,48,46,49,46,51,47,115,114,99,47,115,116,114,101,97,109,46,114,115],"byte_start":48365,"byte_end":48374,"line_start":1006,"line_end":1006,"column_start":22,"column_end":31},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":170},"to":{"krate":1,"index":11960}}]}